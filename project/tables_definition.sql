DROP TABLE IF EXISTS interest_rates;
DROP TABLE IF EXISTS operations;
DROP TABLE IF EXISTS accounts;
DROP TABLE IF EXISTS clients;
DROP TABLE IF EXISTS currencies;
DROP TABLE IF EXISTS account_types;
DROP TABLE IF EXISTS operation_types;


CREATE TABLE IF NOT EXISTS clients (
	client_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	first_name VARCHAR(50) NOT NULL,
	last_name VARCHAR(50) NOT NULL,
	phone_number VARCHAR(15) UNIQUE,
	email VARCHAR(200) UNIQUE,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP 
);

CREATE TABLE IF NOT EXISTS currencies (
	currency_code CHAR(3) PRIMARY KEY,
	currency_name VARCHAR(20) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS account_types (
	account_type_id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	account_type_name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS accounts (
	account_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	client_id INT NOT NULL REFERENCES clients(client_id) ON DELETE CASCADE,
	account_type_id INT NOT NULL REFERENCES account_types(account_type_id) ON DELETE RESTRICT,
	currency_code CHAR(3) NOT NULL REFERENCES currencies(currency_code) ON DELETE RESTRICT,
	balance NUMERIC(15, 2) NOT NULL DEFAULT 0,
	opened_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UNIQUE (client_id, account_type_id, currency_code) -- Пусть клиент не сможет иметь несколько одинаковых счетов одного типа в одной и той же валюте
);

CREATE TABLE IF NOT EXISTS operation_types (
	operation_type_id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	operation_name VARCHAR(50) NOT NULL UNIQUE,
	operation_sign CHAR(1) NOT NULL CHECK (operation_sign IN ('+', '-'))
);

CREATE TABLE IF NOT EXISTS operations (
	operation_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	account_id INT NOT NULL REFERENCES accounts(account_id) ON DELETE CASCADE,
	operation_type_id INT NOT NULL REFERENCES operation_types(operation_type_id) ON DELETE RESTRICT,
	amount NUMERIC(15, 2) NOT NULL CHECK (amount > 0),
	occurred_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS interest_rates (
	account_id INT PRIMARY KEY REFERENCES accounts(account_id) ON DELETE CASCADE,
	percentage NUMERIC(5, 2) CHECK (percentage >=0 AND percentage <= 100)
);
